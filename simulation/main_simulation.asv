function main_simulation()
    % -----------------------------
    % Simulation flags
    % -----------------------------
    simFlags.enableSlosh    = false;   % Turn off slosh model
    simFlags.enableMassFlow = false;  
    simFlags.enableWind     = false;  
    simFlags.enableDrag     = false;   
    simFlags.enableAero     = false;  
    simFlags.enableAero     = false;  

    % -----------------------------
    % Load/define vehicle parameters
    % -----------------------------
    addpath('../vehicle');
    params = parameters();
    params.sim = simFlags;       % embed toggles in params.sim

    % -----------------------------
    % 3) Define initial conditions
    % -----------------------------
    % Example state vector layout:
    % [ x, y, z, vx, vy, vz, phi, theta, psi, p, q, r, mass ]
    x0     = 0;   % [m]
    y0     = 0;   
    z0     = 0;   
    vx0    = 0;   % [m/s]
    vy0    = 0;
    vz0    = 0;
    phi0   = 0;   % [rad]
    theta0 = 0;
    psi0   = 0;
    p0     = 0;   % [rad/s]
    q0     = 0;
    r0     = 0;
    m0     = params.mass.empty + params.mass.propellant;  % total mass [kg]

    state0 = [x0; y0; z0; vx0; vy0; vz0; phi0; theta0; psi0; p0; q0; r0; m0];

    % Time span for simulation
    tspan = [0, 300];
    [t, stateOut] = rocket_6dof(tspan, state0, params);

    % -----------------------------
    % 5) Post-processing / plotting
    % -----------------------------
    figure;
    subplot(3,1,1);
    plot(t, stateOut(:,3));  % altitude, if z is vertical
    ylabel('Altitude [m]');
    xlabel('Time [s]');
    title('Rocket Altitude');

    subplot(3,1,2);
    plot(t, stateOut(:,6));  % vertical velocity
    ylabel('V_z [m/s]');
    xlabel('Time [s]');

    subplot(3,1,3);
    plot(t, stateOut(:,13)); % mass
    ylabel('Mass [kg]');
    xlabel('Time [s]');

    sgtitle('Rocket 6DOF Simulation');

end
